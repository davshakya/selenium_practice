{"name": "test_set_text", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\Dev_Progs\\\\selenium\\\\selenium_demo2\\\\Logs\\\\logfile.log'", "trace": "self = <Test.TestCases.TestUiPractice object at 0x00000274A64F7E20>\n\n    @allure.description(\"Testing input textbox of RM infotech page\")\n    @allure.severity(severity_level=\"Critical\")\n    @pytest.mark.great\n    def test_set_text(self):\n>       log = self.get_logs()\n\nTest\\TestCases.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nUtilities\\logger.py:7: in get_logs\n    filehandler = logging.FileHandler(\"D:\\\\Dev_Progs\\\\selenium\\\\selenium_demo2\\\\Logs\\\\logfile.log\", mode=\"w\")\nC:\\Users\\davsh\\AppData\\Local\\Programs\\Python\\Python39\\lib\\logging\\__init__.py:1146: in __init__\n    StreamHandler.__init__(self, self._open())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'FileHandler' object has no attribute 'level'\") raised in repr()] FileHandler object at 0x274a64f7370>\n\n    def _open(self):\n        \"\"\"\n        Open the current base file with the (original) mode and encoding.\n        Return the resulting stream.\n        \"\"\"\n>       return open(self.baseFilename, self.mode, encoding=self.encoding,\n                    errors=self.errors)\nE       FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\Dev_Progs\\\\selenium\\\\selenium_demo2\\\\Logs\\\\logfile.log'\n\nC:\\Users\\davsh\\AppData\\Local\\Programs\\Python\\Python39\\lib\\logging\\__init__.py:1175: FileNotFoundError"}, "description": "Testing input textbox of RM infotech page", "start": 1686538096396, "stop": 1686538096396, "uuid": "ad295c00-5a8f-4766-86a0-6c17861409c2", "historyId": "e0bc999be04f67814f733ddfb66a4cd2", "testCaseId": "5a519f58ae9c423ac3cbbfe09b4299ee", "fullName": "Test.TestCases.TestUiPractice#test_set_text", "labels": [{"name": "severity", "value": "Critical"}, {"name": "tag", "value": "great"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "TestCases"}, {"name": "subSuite", "value": "TestUiPractice"}, {"name": "host", "value": "davshakya"}, {"name": "thread", "value": "17528-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.TestCases"}]}